Python OOP Notes.

i- Simple OOP + Inheritence

class Person:
    def __init__(self, name, age):
        self.name = name
        self.age = age

    def birtday(self):
        print("Happy Birthday: You were", self.age, 'years old')


class Employee(Person):
    def __init__(self, name, age, eid):
        super().__init__(name, age)
        self.eid = eid

    def calculate_pay(self, hours_worked):
        pay = self.age * hours_worked
        print('You earned: ', pay)


p = Person('Ahmad', 24)
e = Employee('Hamid', 27, 5)

p.birtday()
e.birtday()
e.calculate_pay(24)

In the above code 'super().__init__(name, age)' calls everything from Person class inside the Employee class.


ii - Multiple Inheritence
def Child(FirstParent, SecondParent):

iii - Same methods in both/all parents ?
The class inherited first will be looked for a given method first.
Then the second class will be looked incase not found in first class.
